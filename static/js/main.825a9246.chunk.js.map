{"version":3,"sources":["enums/FilterOptions.tsx","features/currentTodo.ts","features/filter.ts","features/todos.ts","app/store.ts","components/TodoItem/TodoItem.tsx","components/TodoList/TodoList.tsx","app/hooks.ts","components/TodoFilter/TodoFilter.tsx","api.ts","components/Loader/Loader.tsx","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["FilterOption","actions","todo","type","payload","currentTodoReducer","state","arguments","length","undefined","action","query","status","INITIAL_STATE","All","filterReducer","filter","_objectSpread","todos","todosReducer","_toConsumableArray","rootReducer","combineReducers","currentTodo","store","createStore","composeWithDevTools","applyMiddleware","thunk","TodoItem","_ref","id","completed","title","currentTodoId","useSelector","_state$currentTodo","dispatch","useDispatch","isTodoSelected","_jsxs","className","cn","children","_jsx","onClick","TodoList","map","useAppSelector","TodoFilter","onChange","e","target","value","Active","Completed","placeholder","currentTarget","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","Loader","TodoModal","_useState","useState","_useState2","_slicedToArray","user","setUser","_useState3","_useState4","isLoading","setIsLoading","selectedTodo","loadUser","_asyncToGenerator","_regeneratorRuntime","mark","_callee","selectedUser","wrap","_context","prev","next","abrupt","userId","concat","sent","t0","reject","finish","stop","apply","useEffect","href","email","name","App","_useAppSelector","loadTodos","todosFromServer","Error","visibleTodos","useMemo","_ref2","searchQuery","toLowerCase","includes","trim","_Fragment","Root","Provider","Router","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.825a9246.chunk.js","sourcesContent":["export enum FilterOption {\n  All = 'all',\n  Active = 'active',\n  Completed = 'completed',\n}\n","import { Todo } from '../types/Todo';\n\ntype RemoveTodoAction = { type: 'currentTodo/REMOVE' };\n\ntype SetTodoAction = {\n  type: 'currentTodo/SET';\n  payload: Todo;\n};\n\nconst removeTodo = (): RemoveTodoAction => ({ type: 'currentTodo/REMOVE' });\n\nconst setTodo = (todo: Todo): SetTodoAction => ({\n  type: 'currentTodo/SET',\n  payload: todo,\n});\n\nexport const actions = { setTodo, removeTodo };\n\ntype State = Todo | null;\ntype Action = SetTodoAction | RemoveTodoAction;\n\nconst currentTodoReducer = (\n  state: State = null,\n  action: Action,\n): State => {\n  switch (action.type) {\n    case 'currentTodo/SET':\n      return action.payload;\n\n    case 'currentTodo/REMOVE':\n      return null;\n\n    default:\n      return state;\n  }\n};\n\nexport default currentTodoReducer;\n","import { FilterOption } from '../enums/FilterOptions';\n\ntype SetQueryAction = {\n  type: 'filter/SETQUERY',\n  payload: string,\n};\n\ntype SetStatusAction = {\n  type: 'filter/SETSTATUS',\n  payload: FilterOption,\n};\n\nconst setQuery = (query: string): SetQueryAction => ({\n  type: 'filter/SETQUERY',\n  payload: query,\n});\n\nconst setStatus = (status: FilterOption): SetStatusAction => ({\n  type: 'filter/SETSTATUS',\n  payload: status,\n});\n\nexport const actions = { setQuery, setStatus };\n\ntype State = {\n  query: string,\n  status: FilterOption,\n};\n\ntype Action = SetStatusAction | SetQueryAction;\n\nconst INITIAL_STATE: State = {\n  query: '',\n  status: FilterOption.All,\n};\n\nconst filterReducer = (\n  filter = INITIAL_STATE,\n  action: Action,\n): State => {\n  switch (action.type) {\n    case 'filter/SETQUERY':\n      return {\n        ...filter,\n        query: action.payload,\n      };\n\n    case 'filter/SETSTATUS':\n      return {\n        ...filter,\n        status: action.payload,\n      };\n\n    default:\n      return filter;\n  }\n};\n\nexport default filterReducer;\n","import { Todo } from '../types/Todo';\n\ntype SetTodosAction = {\n  type: 'todos/SET';\n  payload: Todo[];\n};\n\nconst setTodos = (todos: Todo[]) : SetTodosAction => ({\n  type: 'todos/SET',\n  payload: todos,\n});\n\nexport const actions = { setTodos };\n\ntype State = Todo[] | [];\ntype Action = SetTodosAction;\n\nconst todosReducer = (\n  state: State = [],\n  action: Action,\n): Todo[] => {\n  switch (action.type) {\n    case 'todos/SET':\n      return [...action.payload];\n    default:\n      return state;\n  }\n};\n\nexport default todosReducer;\n","import { createStore, applyMiddleware, combineReducers } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport thunk from 'redux-thunk';\n\nimport currentTodoReducer from '../features/currentTodo';\nimport filterReducer from '../features/filter';\nimport todosReducer from '../features/todos';\n\nconst rootReducer = combineReducers({\n  currentTodo: currentTodoReducer,\n  filter: filterReducer,\n  todos: todosReducer,\n});\n\n// The `store` is passed to the Provider in `/src/index.tsx`\nexport const store = createStore(\n  rootReducer,\n  composeWithDevTools(\n    applyMiddleware(thunk),\n  ),\n);\n\nexport type RootState = ReturnType<typeof store.getState>;\nexport type AppDispatch = typeof store.dispatch;\n","import cn from 'classnames';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { RootState } from '../../app/store';\nimport { actions } from '../../features/currentTodo';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todo: Todo,\n};\n\nexport const TodoItem: React.FC<Props> = ({ todo }) => {\n  const { id, completed, title } = todo;\n  const currentTodoId = useSelector<RootState>(state => state.currentTodo?.id);\n  const dispatch = useDispatch();\n  const isTodoSelected = currentTodoId === id;\n\n  return (\n    <tr\n      data-cy=\"todo\"\n      className={cn({ 'has-background-info-light': isTodoSelected })}\n    >\n      <td className=\"is-vcentered\">{id}</td>\n      <td className=\"is-vcentered\">\n        {completed && (\n          <span className=\"icon\" data-cy=\"iconCompleted\">\n            <i className=\"fas fa-check\" />\n          </span>\n        )}\n      </td>\n      <td className=\"is-vcentered is-expanded\">\n        <p\n          className={cn({\n            'has-text-danger': !completed, 'has-text-success': completed,\n          })}\n        >\n          {title}\n        </p>\n      </td>\n      <td className=\"has-text-right is-vcentered\">\n        <button\n          data-cy=\"selectButton\"\n          className=\"button\"\n          type=\"button\"\n          onClick={() => {\n            dispatch(actions.setTodo(todo));\n          }}\n        >\n          <span className=\"icon\">\n            <i className={cn('far', {\n              'fa-eye-slash': isTodoSelected,\n              'fa-eye': !isTodoSelected,\n            })}\n            />\n          </span>\n        </button>\n      </td>\n    </tr>\n  );\n};\n","import React from 'react';\nimport { Todo } from '../../types/Todo';\nimport { TodoItem } from '../TodoItem';\n\ntype Props = {\n  todos: Todo[],\n};\n\nexport const TodoList: React.FC<Props> = ({\n  todos,\n}) => (\n  <table className=\"table is-narrow is-fullwidth\">\n    <thead>\n      <tr>\n        <th>#</th>\n        <th>\n          <span className=\"icon\">\n            <i className=\"fas fa-check\" />\n          </span>\n        </th>\n        <th>Title</th>\n        <th> </th>\n      </tr>\n    </thead>\n\n    <tbody>\n      {todos.map(todo => (\n        <TodoItem\n          key={todo.id}\n          todo={todo}\n        />\n      ))}\n    </tbody>\n  </table>\n);\n","import { TypedUseSelectorHook, useDispatch, useSelector } from 'react-redux';\nimport { AppDispatch, RootState } from './store';\n\nexport const useAppDispatch: () => AppDispatch = useDispatch;\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector;\n","import { useDispatch } from 'react-redux';\nimport { useAppSelector } from '../../app/hooks';\nimport { FilterOption } from '../../enums/FilterOptions';\nimport { actions } from '../../features/filter';\n\nexport const TodoFilter: React.FC = () => {\n  const query = useAppSelector(state => state.filter.query);\n  const dispatch = useDispatch();\n\n  return (\n    <form className=\"field has-addons\">\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            onChange={(e) => {\n              dispatch(actions.setStatus(e.target.value as FilterOption));\n            }}\n            data-cy=\"statusSelect\"\n          >\n            <option value={FilterOption.All}>All</option>\n            <option value={FilterOption.Active}>Active</option>\n            <option value={FilterOption.Completed}>Completed</option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          value={query}\n          onChange={(e) => {\n            dispatch(actions.setQuery(e.currentTarget.value));\n          }}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        <span className=\"icon is-right\">\n          {query && (\n            /* eslint-disable-next-line jsx-a11y/control-has-associated-label */\n            <button\n              data-cy=\"clearSearchButton\"\n              type=\"button\"\n              className=\"delete\"\n              onClick={() => dispatch(actions.setQuery(''))}\n            />\n          )}\n        </span>\n      </p>\n    </form>\n  );\n};\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import React, { useEffect, useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { getUser } from '../../api';\nimport { useAppSelector } from '../../app/hooks';\nimport { actions } from '../../features/currentTodo';\nimport { User } from '../../types/User';\nimport { Loader } from '../Loader';\n\nexport const TodoModal: React.FC = () => {\n  const [user, setUser] = useState<User | null>(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const selectedTodo = useAppSelector(state => state.currentTodo);\n  const dispatch = useDispatch();\n\n  const loadUser = async () => {\n    if (!selectedTodo) {\n      return;\n    }\n\n    setIsLoading(true);\n\n    try {\n      const selectedUser = await getUser(selectedTodo.userId);\n\n      setUser(selectedUser);\n    } catch (error) {\n      Promise.reject(error);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    loadUser();\n  }, []);\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {isLoading && !user && (\n        <Loader />\n      )}\n\n      {user && (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              Todo #\n              {selectedTodo?.id}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={() => dispatch(actions.removeTodo())}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {selectedTodo?.title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {selectedTodo?.completed ? (\n                <strong className=\"has-text-success\">Done</strong>\n              ) : (\n                <strong className=\"has-text-danger\">Planned</strong>\n              )}\n\n              {' by '}\n\n              {user && (\n                <a href={`mailto:${user.email}`}>\n                  {user.name}\n                </a>\n              )}\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","/* eslint-disable max-len */\nimport React, { useEffect, useMemo, useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { useDispatch } from 'react-redux';\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { getTodos } from './api';\nimport { Loader } from './components/Loader';\nimport { FilterOption } from './enums/FilterOptions';\nimport { useAppSelector } from './app/hooks';\nimport { actions } from './features/todos';\n\nexport const App: React.FC = () => {\n  const [isLoading, setIsLoading] = useState(false);\n  const selectedTodo = useAppSelector(state => state.currentTodo);\n  const todos = useAppSelector(state => state.todos);\n  const { query, status } = useAppSelector(state => state.filter);\n  const dispatch = useDispatch();\n\n  const loadTodos = async () => {\n    setIsLoading(true);\n    try {\n      const todosFromServer = await getTodos();\n\n      dispatch(actions.setTodos(todosFromServer));\n    } catch {\n      throw new Error('Todos loading is failed');\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    loadTodos();\n  }, []);\n\n  const visibleTodos = useMemo(() => {\n    return todos.filter(({ title, completed }) => {\n      const searchQuery = (\n        title.toLowerCase().includes(query.trim().toLowerCase())\n      );\n\n      switch (status) {\n        case FilterOption.Active:\n          return !completed && searchQuery;\n        case FilterOption.Completed:\n          return completed && searchQuery;\n        default:\n          return searchQuery;\n      }\n    });\n  }, [todos, status, query]);\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter />\n            </div>\n\n            <div className=\"block\">\n              {isLoading && (\n                <Loader />\n              )}\n\n              {todos.length > 0 && (\n                <TodoList\n                  todos={visibleTodos}\n                />\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {selectedTodo && (\n        <TodoModal />\n      )}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { HashRouter as Router } from 'react-router-dom';\n\nimport { store } from './app/store';\nimport { App } from './App';\n\n// Just a convenient component with all the wrappers for the `App`\n// The Router component (if you use it) should be placed inside the Provider\nconst Root = () => (\n  <Provider store={store}>\n    <Router>\n      <App />\n    </Router>\n  </Provider>\n);\n\nReactDOM.render(<Root />, document.getElementById('root'));\n"],"sourceRoot":""}